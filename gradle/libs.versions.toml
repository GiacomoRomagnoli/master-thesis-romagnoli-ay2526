[versions]
kotest = "5.9.1"
kotlin = "2.1.0"
mockito = "5.15.2"
tuprolog = "1.0.4"
alchemist = "37.0.1"
ktor = "3.0.1"
logback = "1.4.14"
kotlinLogging = "7.0.3"
openai = "4.0.1"
kotlinxPlugin = "2.1.0"
kotlinCoroutines = "1.10.1"
mockk = "1.13.17"
kaml = "0.77.0"

[libraries]
alchemist-api = { module = "it.unibo.alchemist:alchemist-api", version.ref = "alchemist" }
alchemist = { module = "it.unibo.alchemist:alchemist", version.ref = "alchemist" }
alchemist-swingui = { module = "it.unibo.alchemist:alchemist-swingui", version.ref = "alchemist" }
alchemist-ui-tooling = {module = "it.unibo.alchemist:alchemist-ui-tooling", version.ref = "alchemist" }
alchemist-euclidean-geometry = {module = "it.unibo.alchemist:alchemist-euclidean-geometry", version.ref = "alchemist" }
alchemist-maps = {module = "it.unibo.alchemist:alchemist-maps", version.ref = "alchemist" }
alchemist-physics = {module = "it.unibo.alchemist:alchemist-physics", version.ref = "alchemist" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotest-junit5-jvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
tuprolog-full = { module = "it.unibo.tuprolog:2p-jvm", version.ref = "tuprolog" }
tuprolog-ide = { module = "it.unibo.tuprolog:ide", version.ref = "tuprolog" }
tuprolog-repl = { module = "it.unibo.tuprolog:repl-jvm", version.ref = "tuprolog" }
tuprolog-core = { module = "it.unibo.tuprolog:core-jvm", version.ref = "tuprolog" }
tuprolog-unify = { module = "it.unibo.tuprolog:unify-jvm", version.ref = "tuprolog" }
tuprolog-theory = { module = "it.unibo.tuprolog:theory-jvm", version.ref = "tuprolog" }
tuprolog-solve-classic = { module = "it.unibo.tuprolog:solve-classic-jvm", version.ref = "tuprolog" }
tuprolog-parser-core = { module = "it.unibo.tuprolog:parser-core-jvm", version.ref = "tuprolog" }
tuprolog-parser-theory = { module = "it.unibo.tuprolog:parser-theory-jvm", version.ref = "tuprolog" }
tuprolog-dsl-core = { module = "it.unibo.tuprolog:dsl-core-jvm", version.ref = "tuprolog" }
tuprolog-dsl-unify = { module = "it.unibo.tuprolog:dsl-unify-jvm", version.ref = "tuprolog" }
tuprolog-dsl-theory = { module = "it.unibo.tuprolog:dsl-theory-jvm", version.ref = "tuprolog" }
tuprolog-dsl-solve = { module = "it.unibo.tuprolog:dsl-solve-jvm", version.ref = "tuprolog" }
tuprolog-oop-lib = { module = "it.unibo.tuprolog:oop-lib-jvm", version.ref = "tuprolog" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlinLogging" }
openai = { module = "com.aallam.openai:openai-client", version.ref = "openai" }
kotlin-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }

[bundles]
kotlin-logging = [ "logback", "kotlin-logging" ]
kotlin-testing = [
    "kotest-junit5-jvm",
    "kotest-assertions-core-jvm",
    "mockito-core",
    "kotlin-mockk"
]
alchemist-api = [
    "alchemist",
    "alchemist-api"
]

alchemist-dev = [
    "alchemist-euclidean-geometry",
    "alchemist-maps",
    "alchemist-physics",
    "alchemist-ui-tooling",
    "alchemist-swingui"
]

[plugins]
dokka = "org.jetbrains.dokka:2.0.0"
gitSemVer = { id = "org.danilopianini.git-sensitive-semantic-versioning", version = "3.1.7" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-qa = { id = "org.danilopianini.gradle-kotlin-qa", version = "0.70.2" }
multiJvmTesting = { id = "org.danilopianini.multi-jvm-test-plugin", version = "3.1.2" }
publishOnCentral =  { id = "org.danilopianini.publish-on-central", version = "8.0.1"}
taskTree = { id = "com.dorongold.task-tree", version = "4.0.0" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinx = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinxPlugin"}
